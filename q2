def tsp(graph):
    n = len(graph)
    visited = [False] * n
    path = [0]  # Start from city 0
    visited[0] = True
    cost = 0

    for _ in range(n - 1):
        last = path[-1]
        nearest_city = -1
        min_dist = float('inf')

        for city in range(n):
            if not visited[city] and graph[last][city] < min_dist:
                min_dist = graph[last][city]
                nearest_city = city
        
        path.append(nearest_city)
        visited[nearest_city] = True
        cost += min_dist

    path.append(0)  # Return to start
    cost += graph[path[-2]][0]

    return path, cost

graph = [
    [0, 10, 15, 20],
    [10, 0, 35, 25],
    [15, 35, 0, 30],
    [20, 25, 30, 0]
]

path, cost = tsp(graph)
print("Shortest Path:", path)
print("Total Cost:", cost)
